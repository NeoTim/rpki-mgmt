# Placed here by your helpful puppeteer
# Copyright 2014 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
@version: 3.3
@include "scl.conf"

options {
flush_lines(0); 
use_dns(persist_only);
use_fqdn(yes); 
owner("root"); 
group("adm"); 
perm(0644); 
stats_freq(300);
normalize_hostnames(yes);
keep_hostname(yes); 
};

# Listen on all addresses, on port 5140.
# Require the ssl certs from the system and it's key.
source s_net { tcp( ip(0.0.0.0) port(5140) max-connections(100)
                 tls( key_file("/etc/ssl/private/ssl-cert-snakeoil.key")
                      cert_file("/etc/ssl/certs/ssl-cert-snakeoil.pem")
                      peer_verify(require-untrusted)
                     )
                  );
              };

# Also listen locally, to ourself.
source s_src { system(); internal(); };



########################
# Destinations
########################
# First some standard logfile
#
destination d_auth { file("/var/log/auth.log"); };
destination d_cron { file("/var/log/cron.log"); };
destination d_daemon { file("/var/log/daemon.log"); };
destination d_kern { file("/var/log/kern.log"); };
destination d_lpr { file("/var/log/lpr.log"); };
destination d_mail { file("/var/log/mail.log"); };
destination d_syslog { file("/var/log/syslog"); };
destination d_user { file("/var/log/user.log"); };
destination d_uucp { file("/var/log/uucp.log"); };

# Some `catch-all' logfiles.
#
destination d_messages { file("/var/log/messages"); };

########################
# Here's come the filter options. With this rules, we can set which 
# message go where.

filter f_dbg { level(debug); };
filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_err { level(err); };
filter f_crit { level(crit .. emerg); };

filter f_debug { level(debug) and
                 not facility(auth, authpriv, news, mail); };

filter f_error { level(err .. emerg) ; };

filter f_messages { level(info,notice,warn) and 
                    not facility(auth,authpriv,cron,daemon,mail,news); };

filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
filter f_cron { facility(cron) and not filter(f_debug); };
filter f_daemon { facility(daemon) and not filter(f_debug); };
filter f_kern { facility(kern) and not filter(f_debug); };
filter f_lpr { facility(lpr) and not filter(f_debug); };

filter f_local { facility(local0, local1, local3, local4, local5,
                        local6, local7) and not filter(f_debug); };

filter f_mail { facility(mail) and not filter(f_debug); };

filter f_syslog3 { not facility(auth, authpriv, mail) and
                   not filter(f_debug); };

filter f_user { facility(user) and not filter(f_debug); };
filter f_uucp { facility(uucp) and not filter(f_debug); };

filter f_cother { level(debug, info, notice, warn) or
                  facility(daemon, mail); };

filter f_ppp { facility(local2) and not filter(f_debug); };
filter f_console { level(warn .. emerg); };

########################
# Log paths
########################
log { source(s_src); source(s_net); filter(f_auth); destination(d_auth); };
log { source(s_src); source(s_net); filter(f_cron); destination(d_cron); };
log { source(s_src); source(s_net); filter(f_daemon); destination(d_daemon); };
log { source(s_src); source(s_net); filter(f_kern); destination(d_kern); };
log { source(s_src); source(s_net); filter(f_lpr); destination(d_lpr); };
log { source(s_src); source(s_net); filter(f_syslog3); destination(d_syslog); };
log { source(s_src); source(s_net); filter(f_user); destination(d_user); };
log { source(s_src); source(s_net); filter(f_uucp); destination(d_uucp); };
log { source(s_src); source(s_net); filter(f_mail); destination(d_mail); };
log { source(s_src); source(s_net); filter(f_messages);
      destination(d_messages); };


