#
# Copyright 2014 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

== Summary ==

Puppet configuration to support an RPKI publication server and associated
infrastructure.

This presumes there are multiple 'publication servers' ready to accept
rsync connections (rcynic connections) from the rest of the RPKI participants,
and a single server storing the private key data away from public eyes. A
puppet service contains configuration, and there are one or my syslog
servers.

== RPKI setup ==

The RPKI services are managed by this configuration/system are offered using
the Dragon Research Labs reference platform. This puppet configurationes does
not (yet) install and manage the RPKI.net software. It must be installed prior
to deploying this puppet configuration. A 'get going in 10 minutes' script is
available here:

  <http://rpki.net/wiki/doc/RPKI/doc/RPKI/Installation/UbuntuRP>

The basic rpkid services, data locations and processes are:

- rpkid - writes stuff to mysql, and to disk for pubd
- pubd - can offer services to clients
- rsyncd (publication point) - shares rpki/publication's content

This configuration will push all publication content to rsyncd servers, run
a script from cron to wrangle the publication data out to all publication
servers and move the rsyncd configuration to keep track of 'HEAD' for this data.

Rsyncd will be managed by inetd/xinetd, so each client will see a clean and
unchanging dataset to retrieve. Rotation of that data off the disk will happen
in a timely fashion as well.

== Puppet config ==

The basic systems configured in the provided site.pp.dist example are:

puppet.example.com       - puppet-master server
ca.example.com           - master rpki server
publish-1.example.com    - publication server AP
log-1.example.com        - syslog collection server EU

Additional publication or log servers can easily be added to the appropriate
node definitions in site.pp.dist.

Several global variables that need to be defined:

  $syslog_servers : syslog destination(s) to be configured on all nodes
  $pupper_server  : puppet server to be configure on all nodes

There are 2 optional globals:
  $ssh_client_range : an IP range used to restrict ssh access to all nodes.
                      Default is '0.0.0.0/0', allowing any IP.
  $ssh_unrestricted_port: a port to be allowed for any IP (e.g. a secondary
                          and non-default port for ssh).

At the bottom of the site.pp.dist is a common_config class which can be used
to add any additional puppet config to be included for all nodes. e.g.
adding users and or additional common packages.
